# Nginx configuration for TreeHub Django Application
# This configuration handles static files and proxies dynamic requests to Django

# Upstream configuration for Django application
upstream django_app {
    # Django app running on port 8000
    # Change this if your Django app runs on a different port
    server web:8000;
}

server {
    # Listen on port 80 for HTTP traffic
    listen 80;
    
    # Server name - CHANGE THIS to your actual domain
    # For local development: localhost
    # For production: your-domain.com www.your-domain.com
    server_name localhost;
    
    # Maximum upload size - adjust based on your needs
    client_max_body_size 100M;
    
    # Gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/javascript
        application/xml+rss
        application/json;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Static files location - Django collected static files
    # This path should match STATIC_ROOT in your Django settings
    location /static/ {
        alias /app/staticfiles/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Optional: serve compressed files if available
        gzip_static on;
        
        # Handle missing files gracefully
        try_files $uri $uri/ =404;
    }

    # Media files location (if you have user uploads in the future)
    # Uncomment and modify if you add media file handling
    # location /media/ {
    #     alias /app/media/;
    #     expires 1y;
    #     add_header Cache-Control "public";
    # }

    # Favicon handling
    location = /favicon.ico {
        alias /app/staticfiles/favicon.ico;
        expires 1y;
        add_header Cache-Control "public, immutable";
        log_not_found off;
        access_log off;
    }

    # Robots.txt handling
    location = /robots.txt {
        alias /app/staticfiles/robots.txt;
        expires 1y;
        add_header Cache-Control "public, immutable";
        log_not_found off;
        access_log off;
    }

    # All other requests go to Django application
    location / {
        # Proxy headers for Django to get real client information
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Proxy timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Pass requests to Django upstream
        proxy_pass http://django_app;
        
        # Handle WebSocket upgrades (if needed in future)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Logging configuration
    access_log /var/log/nginx/treehub_access.log;
    error_log /var/log/nginx/treehub_error.log;
}

# Optional: HTTPS/SSL configuration (uncomment and modify for production)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com www.your-domain.com;
# 
#     # SSL certificate paths - CHANGE THESE to your actual certificate paths
#     ssl_certificate /path/to/your/certificate.crt;
#     ssl_certificate_key /path/to/your/private.key;
# 
#     # SSL configuration
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:MozTLS:10m;
#     ssl_session_tickets off;
# 
#     # Modern configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
# 
#     # HSTS
#     add_header Strict-Transport-Security "max-age=63072000" always;
# 
#     # Include the same location blocks as above
#     # ... (copy all location blocks from the HTTP server block)
# }
# 
# # Redirect HTTP to HTTPS (uncomment for production with SSL)
# server {
#     listen 80;
#     server_name your-domain.com www.your-domain.com;
#     return 301 https://$server_name$request_uri;
# }